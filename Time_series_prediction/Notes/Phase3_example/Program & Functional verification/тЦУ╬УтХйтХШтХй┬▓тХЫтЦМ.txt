功能实现测试
1.正弦函数
input = [math.sin(x) for x in range(100)]
frequencies:  [0.16]
amplitudes:  [0.98842451]
period: 6.25
2.正弦函数的叠加
input = [1 + 5 * math.sin(2 * math.pi * 200 * x) + 7 * math.sin(2 * math.pi * 400 * x) + 3 * math.sin(2 * np.pi * 600 * x) for x in np.linspace(0, 1, num=1400)]
frequencies:  [0.28571429 0.14285714 0.42857143]
amplitudes:  [6.08889917 4.83713195 2.14879733]
period: 3.5
补充：正弦函数的叠加（采样数目是2的指数次方）
input = [1 + 5 * math.sin(2 * math.pi * 200 * x) + 7 * math.sin(2 * math.pi * 400 * x) + 3 * math.sin(2 * np.pi * 600 * x) for x in np.linspace(0, 1, num=4096)]
frequencies:  [0.09765625 0.04882812 0.14648438]
amplitudes:  [6.88977253 4.98251344 2.8897009 ]
period: 10.24

虚构的时间序列数据
3.仅周期
testData1 - seasonality.xlsx
frequencies:  [0.25]
amplitudes:  [0.5]
period: 4.0
4.周期和趋势
testData2 - seasonality with trend.xlsx
frequencies:  [0.25]
amplitudes:  [1.80277564]
period: 4.0
5.周期、趋势和异常值
testData3 - seasonality with trend, with abnormal values.xlsx
frequencies:  [0.35]
amplitudes:  [1.89192359]
period: 2.857142857142857

尝试应用在实际数据中
6.流量数据
Monthly static.xlsx
frequencies:  [0.14324324 0.04864865 0.28648649 0.00540541 0.16756757 0.02702703
 0.35675676 0.44864865 0.13783784 0.21351351 0.4        0.04324324
 0.3027027  0.2972973  0.23243243 0.34594595 0.05945946 0.27027027
 0.15945946 0.18648649 0.40810811 0.32432432 0.11621622 0.1
 0.44324324 0.31621622 0.22162162 0.43513514 0.35135135 0.45675676
 0.05405405 0.48378378 0.15405405 0.27837838 0.48918919 0.25405405
 0.13243243 0.41891892 0.22702703 0.07027027 0.07837838 0.19189189
 0.37027027 0.46216216 0.32972973 0.12702703 0.24594595 0.26486486
 0.31081081 0.42972973 0.38108108 0.2027027  0.08378378 0.24054054
 0.17837838 0.46756757 0.42432432 0.37567568 0.47567568 0.20810811
 0.39189189 0.09189189 0.33513514]
amplitudes:  [0.33044615 0.17915357 0.16383799 0.16112735 0.15859142 0.15422378
 0.15420438 0.15095808 0.149521   0.14865537 0.14652328 0.14369379
 0.14210243 0.14091916 0.13837026 0.133553   0.12909528 0.12843179
 0.12457869 0.12320585 0.12054361 0.11900673 0.11512516 0.11474428
 0.1114336  0.10931486 0.10881945 0.10866084 0.10849025 0.10763584
 0.10712166 0.10448837 0.1044379  0.10255731 0.09807523 0.09756267
 0.0974634  0.09628313 0.0952545  0.09523522 0.0949323  0.09095286
 0.09010309 0.08934958 0.08785885 0.08635095 0.08393446 0.08392484
 0.08382179 0.08348919 0.08264981 0.08108794 0.07763762 0.07419461
 0.07337504 0.07307462 0.06988467 0.06287004 0.05675048 0.05596392
 0.05351811 0.05218747 0.05086805]
period: 6.981132075471698

7.提交数据-总提交数
input = pd.read_csv(r"commit_number.csv")["commmit_number_total"]
frequencies:  [0.13157895 0.28947368 0.42105263 0.07894737]
amplitudes:  [57.94315257 43.57005836 18.38219612 10.38496184]
period: 7.6000000000000005

8.提交数据-配置相关修改数
input = pd.read_csv(r"commit_number.csv")["commmit_number_config"]
frequencies:  [0.15789474 0.28947368 0.42105263 0.34210526]
amplitudes:  [3.15580878 2.89086413 2.72683727 0.97800439]
period: 6.333333333333334

9.提交数据-产品代码相关修改数
input = pd.read_csv(r"commit_number.csv")["commmit_number_product"]
frequencies:  [0.13157895 0.28947368 0.42105263 0.07894737]
amplitudes:  [56.08212697 41.22572628 16.28390779 11.20354865]
period: 7.6000000000000005
