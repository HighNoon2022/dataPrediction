资料：
	时间序列分析——函数分解
		https://blog.csdn.net/weixin_43290383/article/details/113175319
	时间序列分析之：傅里叶变换找周期
		https://blog.csdn.net/weixin_43290383/article/details/113242416#comments_18910334
	使用python（scipy和numpy）实现快速傅里叶变换（FFT）最详细教程
		https://blog.csdn.net/qq_27825451/article/details/88553441
	scipy官网对fft函数的介绍
		https://docs.scipy.org/doc/scipy/reference/generated/scipy.fft.rfft.html
	scipy fft函数的返回值的理解
		https://zhuanlan.zhihu.com/p/70347734
extractPeriod.py
	思路：
		1.用FFT分解时间序列
		2.找信号幅度最大的那个正弦波的频率，作为函数的周期
	细节：
		第一部分：从原始信号获取幅谱图中各点的振幅和频率
			实现FFT
				基于scipy库实现
					from scipy.fftpack import fft, ifft
				基于numpy库实现
					from numpy import fft, ifft
				注：ifft是fft的逆变换(inverse)
			处理fft函数返回值，计算振幅频率
				scipy.fftpack下的fft函数返回值：复数列表
				获取振幅(幅谱图)
					对各个复数取模(绝对值)，得到幅谱图
					直流分量的振幅A1
						纵坐标为直流分量振幅的N倍(N为取样个数)
					各个余弦分量的振幅(A2, A3, A4)
						纵坐标为余弦分量振幅的N/2倍(N为取样个数)
				(获取相位(相位谱))
					取各个复数对应的角度，得到相位谱
					注：这里用不到
				获取频率
					复数列表的下标与频率相关
						f = x * Fs / N
							x	复数列表中元素的下标
							Fs	取样频率
									我理解在这个式子中Fs的作用为单位换算
										在默认情况下这个值为1，此函数计算出的周期单位为时间序列的最小间隔(比如：天)
										当指定这个参数时,周期的单位会因为此公式被自动转换为国际单位秒
							N	取样个数
			双边振幅谱处理：取一半
				FFT得到的原始振幅谱是双边振幅谱
				因为双边振幅谱具有对称性，因此对其进行取一半处理
					amplitudes = amplitudes[0: math.ceil(N/2)]
			归一化
				由于FFT得到的幅谱图的纵坐标是采样点数的N/2或N倍，如果采样点数很多会使纵坐标很大，因此对其进行除以N的归一化处理
				不同于文章中的介绍，我的函数里直接分类计算幅值
		第二部分：获取想要的周期
			取极值
				获取幅谱图上的各个极值点
					每个极值点都对应于分解出来的一个正弦波(下标与频率有关，值与振幅有关)
			排序
				1)先把幅值求出来用于排序
					decomposed_amplitudes = amplitudes[decomposed_indexes]
				2)按照幅值降序排序
					sorted_indexes = np.argsort(-decomposed_amplitudes)
		可能的局限性：
			采样频率是否会影响预测结果？
				根据采样定理，要想将原来的连续信号从采样样本中完全重建出来，采样频率需要高于信号带宽的两倍
					https://blog.csdn.net/qq_27825451/article/details/88553441
					信号周期>=2*取样周期
						即，在时间序列中，周期大于等于2个采样间隔的信号
				如果不满足采样定理，会产生混叠现象
					例如：电影不断以24帧/秒的速率对变化的图像进行离散采样，画面中的车轮从一帧到下一帧，看起来是沿逆时针方向移动17%辐条间隔，但实际上是沿顺时针方向移动83%辐条间隔
				混叠现象不会影响预测
					虽然周期<2个取样周期的信号会被解释为周期更长(频率更低)的重叠信号，但是在我们预测的离散采样点上，由于是重合的，因此预测结果也没有受到影响(虽然我们不知道车轮是怎么运动的，但是知道它下一帧是在什么位置)
		优化/改变：
			运算速度
				采样个数为2的n次方时可以提升FFT运算速度
			准确度
				采样个数如果不是2的n次方会影响幅值计算的准确度，但不影响周期
					例如：
						input = [1 + 5 * math.sin(2 * math.pi * 200 * x) + 7 * math.sin(2 * math.pi * 400 * x) + 3 * math.sin(2 * np.pi * 600 * x) for x in np.linspace(0, 1, num=1400)]
					计算出的最大振幅是6.08889917，对应周期是400.000006
					而：
						input = [1 + 5 * math.sin(2 * math.pi * 200 * x) + 7 * math.sin(2 * math.pi * 400 * x) + 3 * math.sin(2 * np.pi * 600 * x) for x in np.linspace(0, 1, num=4096)]
					计算出的最大振幅是6.88977253，对应周期是400
			周期处理
				目前是取振幅最大的正弦波对应周期
				如果要考虑叠加正弦波可能需要取最小公倍数
					可根据幅值筛选出影响较大的多个正弦波，再取最小公倍数
	测试：
		基本功能 -> 虚构的实际数据 -> 实际数据
next step:
	预测函数
		时间序列预测函数(计算周期+时间序列分解+各个时间序列部分分别预测+整合生成预测数据)+预测评估(交叉验证图线绘制+准确率计算)
	更多的时间序列预测方法
	